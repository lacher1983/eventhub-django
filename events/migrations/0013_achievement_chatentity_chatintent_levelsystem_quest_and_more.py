# Generated by Django 5.2.5 on 2025-10-09 18:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0012_buddyrequest_travelbuddygroup_travelbuddymessage_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('event', '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'), ('social', '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ'), ('exploration', '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ'), ('mastery', '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ'), ('special', '–û—Å–æ–±—ã–µ')], max_length=20)),
                ('icon', models.CharField(default='üèÜ', max_length=50)),
                ('points', models.PositiveIntegerField(default=10)),
                ('requirement', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ',
                'verbose_name_plural': '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                'ordering': ['points', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ChatEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('patterns', models.JSONField(default=list)),
                ('examples', models.JSONField(default=list)),
            ],
            options={
                'verbose_name': '–°—É—â–Ω–æ—Å—Ç—å —á–∞—Ç–∞',
                'verbose_name_plural': '–°—É—â–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞',
            },
        ),
        migrations.CreateModel(
            name='ChatIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('patterns', models.JSONField(default=list)),
                ('responses', models.JSONField(default=list)),
                ('action', models.CharField(blank=True, max_length=200)),
                ('required_entities', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': '–ò–Ω—Ç–µ–Ω—Ç —á–∞—Ç–∞',
                'verbose_name_plural': '–ò–Ω—Ç–µ–Ω—Ç—ã —á–∞—Ç–∞',
            },
        ),
        migrations.CreateModel(
            name='LevelSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(unique=True)),
                ('level_name', models.CharField(max_length=50)),
                ('min_points', models.PositiveIntegerField()),
                ('max_points', models.PositiveIntegerField()),
                ('badge_icon', models.CharField(default='‚≠ê', max_length=50)),
                ('color', models.CharField(default='#667eea', max_length=7)),
                ('benefits', models.JSONField(default=list)),
            ],
            options={
                'verbose_name': '–£—Ä–æ–≤–µ–Ω—å —Å–∏—Å—Ç–µ–º—ã',
                'verbose_name_plural': '–£—Ä–æ–≤–Ω–∏ —Å–∏—Å—Ç–µ–º—ã',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('quest_type', models.CharField(choices=[('daily', '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ'), ('weekly', '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ'), ('monthly', '–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ'), ('special', '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ')], max_length=10)),
                ('points_reward', models.PositiveIntegerField()),
                ('requirement', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '–ó–∞–¥–∞–Ω–∏–µ',
                'verbose_name_plural': '–ó–∞–¥–∞–Ω–∏—è',
                'ordering': ['quest_type', 'points_reward'],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('context', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '–°–µ—Å—Å–∏—è —á–∞—Ç–∞',
                'verbose_name_plural': '–°–µ—Å—Å–∏–∏ —á–∞—Ç–∞',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'), ('assistant', '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'), ('system', '–°–∏—Å—Ç–µ–º–∞')], max_length=10)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='events.chatsession')),
            ],
            options={
                'verbose_name': '–°–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞',
                'verbose_name_plural': '–°–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('points', models.PositiveIntegerField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_position', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '–ü–æ–∑–∏—Ü–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤',
                'verbose_name_plural': '–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('progress', models.FloatField(default=0.0)),
                ('is_unlocked', models.BooleanField(default=False)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                'verbose_name_plural': '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                'ordering': ['-unlocked_at'],
                'unique_together': {('user', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.PositiveIntegerField(default=0)),
                ('streak_days', models.PositiveIntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('badges', models.JSONField(default=list)),
                ('stats', models.JSONField(default=dict)),
                ('current_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.levelsystem')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='game_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '–ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
                'verbose_name_plural': '–ò–≥—Ä–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏',
            },
        ),
        migrations.CreateModel(
            name='UserQuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.FloatField(default=0.0)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.quest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '–ó–∞–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                'verbose_name_plural': '–ó–∞–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                'unique_together': {('user', 'quest')},
            },
        ),
        migrations.DeleteModel(
            name='BuddyRequest',
        ),
    ]