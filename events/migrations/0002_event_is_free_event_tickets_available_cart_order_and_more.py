# Generated by Django 5.2.5 on 2025-09-24 19:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

def migrate_event_types(apps, schema_editor):
    Event = apps.get_model('events', 'Event')

    # Маппинг старых типов к новым категориям и типам
    TYPE_MAPPING = {
        'conference': ('business', 'conference'),
        'workshop': ('education', 'workshop'),
        'webinar': ('education', 'webinar'),
        'festival': ('entertainment', 'festival'),
        'exhibition': ('business', 'exhibition'),
        'concert': ('entertainment', 'concert'),
        'sport': ('sport', 'sport_event'),
        'networking': ('business', 'networking'),
        'charity': ('social', 'charity'),
        'competition': ('sport', 'competition'),
        'tour': ('culture', 'tour'),
        'party': ('entertainment', 'party'),
        'business': ('business', 'business_meeting'),
        'education': ('education', 'lecture'),
    }
    
    for event in Event.objects.all():
        if event.old_event_type in TYPE_MAPPING:  # old_event_type - старое поле
            category, new_type = TYPE_MAPPING[event.old_event_type]
            event.category = category
            event.event_type = new_type
            event.save()

class Migration(migrations.Migration):

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='is_free',
            field=models.BooleanField(default=False, verbose_name='Бесплатное мероприятие'),
        ),
        migrations.AddField(
            model_name='event',
            name='tickets_available',
            field=models.PositiveIntegerField(default=100, verbose_name='Доступно билетов'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Ожидает оплаты'), ('paid', 'Оплачено'), ('cancelled', 'Отменено'), ('refunded', 'Возврат')], default='pending', max_length=10)),
                ('payment_method', models.CharField(choices=[('card', 'Банковская карта'), ('paypal', 'PayPal'), ('qiwi', 'QIWI'), ('yoomoney', 'ЮMoney')], max_length=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='events.order')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='events.cart')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
            options={
                'unique_together': {('cart', 'event')},
            },
        ),
    ]
