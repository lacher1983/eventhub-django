from django import forms
from django.conf import settings 
from .models import Event, Category, Order, Registration, Review
from django.utils import timezone

class EventForm(forms.ModelForm):
    class Meta:
        model = Event
        fields = ['title', 'short_description', 'description', 'date', 
                 'location', 'event_type', 'category', 'image', 
                 'price', 'capacity', 'is_free', 'tickets_available']
        widgets = {
            'date': forms.DateTimeInput(attrs={'type': 'datetime-local'}),
            'description': forms.Textarea(attrs={'rows': 4}),
            'short_description': forms.Textarea(attrs={'rows': 2}),
            'tickets_available': forms.NumberInput(attrs={'min': 1})
        }
        labels = {
            'title': '–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
            'short_description': '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
            'description': '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
            'date': '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è',
            'location': '–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è',
            'event_type': '–¢–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
            'category': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
            'image': '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
            'price': '–¶–µ–Ω–∞ (‚ÇΩ)',
            'capacity': '–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å',
        }

    def clean_date(self):
        date = self.cleaned_data.get('date')
        if date and date < timezone.now():
            raise forms.ValidationError("–î–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º!")
        return date

class ReviewForm(forms.ModelForm):
    """–§–æ—Ä–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤"""
    class Meta:
        model = Review
        fields = ['rating', 'comment']
        widgets = {
            'rating': forms.Select(attrs={
                'class': 'form-select',
                'id': 'rating-select'
            }),
            'comment': forms.Textarea(attrs={
                'class': 'form-control',
                'rows': 4,
                'placeholder': '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏...'
            })
        }
        labels = {
            'rating': '–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞',
            'comment': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
        }

class RegistrationForm(forms.ModelForm):
    class Meta:
        model = Registration
        fields = []  # —Ñ–æ—Ä–º–æ—á–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏


from django import forms
from .models import CartItem, Order

class AddToCartForm(forms.ModelForm):
    quantity = forms.IntegerField(
        min_value=1,
        max_value=10,
        initial=1,
        widget=forms.NumberInput(attrs={'class': 'form-control', 'style': 'width: 80px'})
    )

    class Meta:
        model = CartItem
        fields = ['quantity']

class CheckoutForm(forms.ModelForm):
    class Meta:
        model = Order
        fields = ['first_name', 'last_name', 'email', 'phone', 'address', 'city', 'postal_code', 'country']
        widgets = {
            'first_name': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–ò–º—è'}),
            'last_name': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–§–∞–º–∏–ª–∏—è'}),
            'email': forms.EmailInput(attrs={'class': 'form-control', 'placeholder': 'Email'}),
            'phone': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–¢–µ–ª–µ—Ñ–æ–Ω'}),
            'address': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–ê–¥—Ä–µ—Å'}),
            'city': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–ì–æ—Ä–æ–¥'}),
            'postal_code': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å'}),
            'country': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–°—Ç—Ä–∞–Ω–∞'}),
        }

class PaymentForm(forms.Form):
    PAYMENT_METHODS = [
        ('card', 'üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞'),
        ('paypal', 'üì± PayPal'),
        ('qiwi', 'üßæ QIWI'),
        ('yoomoney', 'üí∏ –ÆMoney'),
    ]
    
    payment_method = forms.ChoiceField(
        choices=PAYMENT_METHODS,
        widget=forms.RadioSelect(attrs={'class': 'form-check-input'}),
        label='–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã',
        initial='card'
    )