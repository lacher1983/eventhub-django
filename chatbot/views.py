from django.shortcuts import render
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_http_methods
import json
import logging
import uuid

logger = logging.getLogger(__name__)

def chat_interface(request):
    """–û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞"""
    return render(request, 'chatbot/chat_interface.html')

@csrf_exempt
@require_http_methods(["POST"])
def chat_api(request):
    """API endpoint –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–±–æ—Ç–∞"""
    print("=== CHAT API CALLED ===")  # –≠—Ç–æ –î–û–õ–ñ–ù–û –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏ Django
    
    if request.method == 'POST':
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ –ø—É—Å—Ç–æ–µ
            if not request.body:
                print("Empty request body")
                return JsonResponse({'error': '–ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å'}, status=400)
            
            data = json.loads(request.body)
            message = data.get('message', '').strip()
            session_id = data.get('session_id', '')
            
            print(f"Received message: '{message}'")  # –î–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏
            print(f"Session ID: {session_id}")
            
            if not message:
                print("Empty message")
                return JsonResponse({'error': '–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'}, status=400)
            
            # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
            message_lower = message.lower()
            
            if any(word in message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', 'hello', 'hi']):
                response_text = "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ EventHub. ü§ñ\n\n–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
                suggestions = ["–ù–∞–π–¥–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–ü–æ–º–æ—â—å", "–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è?"]
                events = []
            
            elif any(word in message_lower for word in ['–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', '—Å–æ–±—ã—Ç–∏—è', 'events', '–∏–≤–µ–Ω—Ç—ã']):
                response_text = "–û—Ç–ª–∏—á–Ω–æ! –ò—â—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –≤–∞—Å... üéØ\n\n–í–æ—Ç —á—Ç–æ –Ω–∞—à–ª–æ—Å—å:"
                suggestions = ["–ö–æ–Ω—Ü–µ—Ä—Ç—ã", "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏", "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"]
                events = [
                    {
                        'id': 1,
                        'title': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è Future Tech',
                        'date': '25.09.2024',
                        'location': '–ú–æ—Å–∫–≤–∞',
                        'price': 0,
                        'type': '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è',
                        'description': '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –æ –±—É–¥—É—â–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π'
                    },
                    {
                        'id': 2,
                        'title': '–î–∂–∞–∑–æ–≤—ã–π –≤–µ—á–µ—Ä –≤ City Club',
                        'date': '28.09.2024', 
                        'location': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
                        'price': 1500,
                        'type': '–ö–æ–Ω—Ü–µ—Ä—Ç',
                        'description': '–í–µ—á–µ—Ä –∂–∏–≤–æ–π –¥–∂–∞–∑–æ–≤–æ–π –º—É–∑—ã–∫–∏'
                    }
                ]
            
            elif any(word in message_lower for word in ['–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ', '–±–µ—Å–ø–ª–∞—Ç–Ω–æ', 'free']):
                response_text = "–í–æ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: üÜì"
                suggestions = ["–í—Å–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ", "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã", "–í–æ–ª–æ–Ω—Ç–µ—Ä—Å–∫–∏–µ"]
                events = [
                    {
                        'id': 3,
                        'title': '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É',
                        'date': '26.09.2024',
                        'location': '–û–Ω–ª–∞–π–Ω',
                        'price': 0,
                        'type': '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å',
                        'description': '–û–Ω–ª–∞–π–Ω –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ digital –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É'
                    }
                ]
            
            elif any(word in message_lower for word in ['–ø–æ–º–æ—â—å', 'help', '—É–º–µ–µ—à—å']):
                response_text = "–Ø –ø–æ–º–æ–≥—É –≤–∞–º:\n‚Ä¢ –ù–∞–π—Ç–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üéØ\n‚Ä¢ –ü–æ–¥–æ–±—Ä–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º\n‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n\n–ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö!"
                suggestions = ["–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è?", "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏", "–ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–æ–±—ã—Ç–∏—è?"]
                events = []
            
            else:
                response_text = f"–í—ã —Å–ø—Ä–æ—Å–∏–ª–∏: '{message}'\n\n–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –ø–æ–∏—Å–∫–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –æ —Å–æ–±—ã—Ç–∏—è—Ö, –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö –∏–ª–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ö! üé™"
                suggestions = ["–ù–∞–π–¥–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è"]
                events = []
            
            print(f"Response: {response_text[:50]}...")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞
            
            return JsonResponse({
                'response': response_text,
                'suggestions': suggestions,
                'events': events,
                'session_id': session_id or 'default_session'
            })
            
        except json.JSONDecodeError as e:
            print(f"JSON decode error: {e}")
            return JsonResponse({'error': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON'}, status=400)
        except Exception as e:
            print(f"General error: {e}")
            import traceback
            print(f"Traceback: {traceback.format_exc()}")
            return JsonResponse({'error': f'–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: {str(e)}'}, status=500)
    
    print("GET request received")
    return JsonResponse({'error': 'Only POST allowed'}, status=405)